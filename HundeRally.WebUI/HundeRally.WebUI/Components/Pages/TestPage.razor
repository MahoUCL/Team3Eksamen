@using Domain.Services
@page "/TestPage"
@inject ImageService ImageService
@inject Cell Cell


<div id="grid">
    @for (var i = 0; i < cells; i++)
    {
        <div id="@($"cell{i + 1}")" class="cell @(selectedBox == i ? "selected" : "")" @onclick="() => SelectBox(i)" @ondblclick="OpenGallery"></div>
    }
</div>

@if (isGalleryOpen)
{
    <div id="gallery" class="gallery">
        <button @onclick="CloseGallery">Exit</button>
        <div class="gallery-images">
            @foreach (var image in images)
            {
                <img src="@image.Url" class="gallery-image @(selectedImage == image ? "selected-image" : "")" @onclick="() => SelectImage(image)" />
            }
        </div>
    </div>
}

@code {
    public class Cell
    {
        public int Id { get; set; }
        public bool IsSelected { get; set; }
        public Image SelectedImage { get; set; }
    }

    private List<Cell> grid = new List<Cell>();

    private void SelectBox(int index)
    {
        foreach (var cell in grid)
        {
            cell.IsSelected = false;
        }
        grid[index].IsSelected = true;
    }

    private void SelectImage(Image image)
    {
        var selectedCell = grid.FirstOrDefault(cell => cell.IsSelected);
        if (selectedCell != null)
        {
            selectedCell.SelectedImage = image;
        }
    }

    private string GetGridState()
    {
        return JsonSerializer.Serialize(grid);
    }


    private int cells = 22 * 30;
    private int? selectedBox;
    private Image? selectedImage;
    private bool isGalleryOpen;
    private List<Image> images = new List<Image>(); // You need to populate this list with your images
    protected override void OnInitialized()
    {
        base.OnInitialized();
        images = ImageService.GetImageNames().Select(name => new Image { Url = $"/images/{name}" }).ToList();
    }


    private void SelectBox(int index)
    {
        selectedBox = index;
    }

    private void OpenGallery()
    {
        isGalleryOpen = true;
    }

    private void CloseGallery()
    {
        isGalleryOpen = false;
    }

    private void SelectImage(Image image)
    {
        selectedImage = image;
        if (selectedBox.HasValue)
        {
            // Add the selected image to the selected box
            // This part depends on how you want to handle the image selection
        }
        CloseGallery();
    }

    public class Image
    {
        public string Url { get; set; }
    }
}

@* 
<h1>Image Gallery</h1>

<div class="image-gallery">
    @foreach (var imageName in ImageService.GetImageNames())
    {
        <img src="@($"/images/{imageName}")" alt="@imageName" />
    }
</div>
 *@

