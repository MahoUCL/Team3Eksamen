@page "/obstacles"
@inject HttpClient Http
@using HundeRally.Wasm.Models
@inject NavigationManager NavigationManager

<h3>Obstacles</h3>

@if (obstacles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Number</th> 
            </tr>
        </thead>
        <tbody>
            @foreach (var obstacle in obstacles)
            {
                <tr>
                    <td>@obstacle.Name</td>
                    <td>@obstacle.Description</td>
                    <td>@obstacle.Number</td> 
                </tr>
            }            
        </tbody>
    </table>
}


<button class="btn btn-primary" @onclick="NavigateToCreateObstacle">Create Obstacle</button>

@code {
    // Routing for the create obstacle button
    private void NavigateToCreateObstacle()
    {
        NavigationManager.NavigateTo("/createobstacle");
    }

    // Array for the for loop
    private Obstacle[] obstacles;

    // Makes the get request at runtime for obstacles
    protected override async Task OnInitializedAsync()
    {
        obstacles = await Http.GetFromJsonAsync<Obstacle[]>("https://localhost:7010/api/Obstacle");
    }
}